// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Movies.Persistance;

namespace WebApp.Movies.Persistance.Migrations
{
    [DbContext(typeof(MoviesDbContext))]
    [Migration("20210925195815_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.Actor", b =>
                {
                    b.Property<int>("IDActor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDActor");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.ActorTVProgram", b =>
                {
                    b.Property<Guid>("IDTVProgram")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IDActor")
                        .HasColumnType("int");

                    b.HasKey("IDTVProgram", "IDActor");

                    b.HasIndex("IDActor");

                    b.ToTable("ActorTVPrograms");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.Rating", b =>
                {
                    b.Property<int>("IDRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumberOfStars")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("IDRating");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            IDRating = 1,
                            NumberOfStars = 1
                        },
                        new
                        {
                            IDRating = 2,
                            NumberOfStars = 2
                        },
                        new
                        {
                            IDRating = 3,
                            NumberOfStars = 3
                        },
                        new
                        {
                            IDRating = 4,
                            NumberOfStars = 4
                        },
                        new
                        {
                            IDRating = 5,
                            NumberOfStars = 5
                        });
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.TVProgram", b =>
                {
                    b.Property<Guid>("IDTVProgram")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("PictureDisplay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("Date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TypeOfProgramID")
                        .HasColumnType("int");

                    b.HasKey("IDTVProgram");

                    b.HasIndex("TypeOfProgramID");

                    b.ToTable("TVPrograms");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.TVProgramRating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDRating")
                        .HasColumnType("int");

                    b.Property<Guid>("IDTVProgram")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("IDRating");

                    b.HasIndex("IDTVProgram");

                    b.ToTable("TVProgramRatings");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.TypeOfProgram", b =>
                {
                    b.Property<int>("IDTypeOfProgram")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IDTypeOfProgram");

                    b.ToTable("TypeOfPrograms");

                    b.HasData(
                        new
                        {
                            IDTypeOfProgram = 1,
                            Caption = "TV Show"
                        },
                        new
                        {
                            IDTypeOfProgram = 2,
                            Caption = "Movie"
                        });
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.ActorTVProgram", b =>
                {
                    b.HasOne("WebApp.Movies.Domain.Entities.Actor", "Actor")
                        .WithMany("ActorTVProgram")
                        .HasForeignKey("IDActor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Movies.Domain.Entities.TVProgram", "TVProgram")
                        .WithMany("ActorTVProgram")
                        .HasForeignKey("IDTVProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("TVProgram");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.TVProgram", b =>
                {
                    b.HasOne("WebApp.Movies.Domain.Entities.TypeOfProgram", "TypeOfProgram")
                        .WithMany()
                        .HasForeignKey("TypeOfProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfProgram");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.TVProgramRating", b =>
                {
                    b.HasOne("WebApp.Movies.Domain.Entities.Rating", "Rating")
                        .WithMany("TVProgramRating")
                        .HasForeignKey("IDRating")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Movies.Domain.Entities.TVProgram", "TVProgram")
                        .WithMany("TVProgramRating")
                        .HasForeignKey("IDTVProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rating");

                    b.Navigation("TVProgram");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.Actor", b =>
                {
                    b.Navigation("ActorTVProgram");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.Rating", b =>
                {
                    b.Navigation("TVProgramRating");
                });

            modelBuilder.Entity("WebApp.Movies.Domain.Entities.TVProgram", b =>
                {
                    b.Navigation("ActorTVProgram");

                    b.Navigation("TVProgramRating");
                });
#pragma warning restore 612, 618
        }
    }
}
